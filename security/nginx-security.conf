# SmellPin Security-Hardened Nginx Configuration
# Enterprise-grade security with HTTPS enforcement, DDoS protection, and WAF

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=strict:10m rate=1r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_conn_zone $server_name zone=conn_limit_per_server:10m;

# GeoIP blocking (requires GeoIP2 module)
map $geoip2_country_code $blocked_country {
    default 0;
    # Add countries to block if needed
    # CN 1;
    # RU 1;
}

# Bot detection
map $http_user_agent $blocked_agent {
    default 0;
    ~*malicious 1;
    ~*bot 1;
    ~*crawler 1;
    ~*spider 1;
    "" 1; # Block empty user agents
}

# Security headers map
map $sent_http_content_type $csp_header {
    default "";
    ~^text/html "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com https://maps.googleapis.com https://www.google.com https://www.gstatic.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.smellpin.com https://*.workers.dev wss://api.smellpin.com; frame-src 'self' https://js.stripe.com; object-src 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;";
}

server {
    listen 80;
    server_name smellpin.com www.smellpin.com api.smellpin.com *.smellpin.com;
    
    # Security headers for HTTP (before redirect)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server block for frontend
server {
    listen 443 ssl http2;
    server_name smellpin.com www.smellpin.com;
    
    # SSL/TLS Configuration
    ssl_certificate /etc/nginx/ssl/smellpin.com.crt;
    ssl_certificate_key /etc/nginx/ssl/smellpin.com.key;
    ssl_trusted_certificate /etc/nginx/ssl/smellpin.com.chain.crt;
    
    # Modern SSL/TLS configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # DH Parameters for Perfect Forward Secrecy
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(self), microphone=(), camera=(), payment=(self), usb=(), magnetometer=(), accelerometer=(), gyroscope=()" always;
    add_header Content-Security-Policy $csp_header always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Resource-Policy "cross-origin" always;
    
    # Hide server information
    server_tokens off;
    more_clear_headers Server;
    more_set_headers "Server: SmellPin";
    
    # Connection and request limits
    limit_conn conn_limit_per_ip 10;
    limit_conn conn_limit_per_server 1000;
    
    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    
    # Security blocks
    if ($blocked_country) { return 403; }
    if ($blocked_agent) { return 403; }
    
    # Block suspicious requests
    location ~ /\\.well-known/security\\.txt$ {
        add_header Content-Type text/plain;
        return 200 "Contact: security@smellpin.com\nExpires: 2025-12-31T23:59:59.000Z\nPreferred-Languages: en\nCanonical: https://smellpin.com/.well-known/security.txt";
    }
    
    # Block common attack patterns
    location ~* "\\.(htaccess|htpasswd|ini|log|sh|sql|conf)$" { return 403; }
    location ~* "(eval\\(|base64_decode|shell_exec|passthru|system\\()" { return 403; }
    location ~* "(proc/self/environ|usr/bin/id)" { return 403; }
    location ~* "(union.*select|concat.*\\()" { return 403; }
    
    # Prevent access to sensitive areas
    location ~ /\\. { deny all; }
    location ~ ^/(config|includes|misc|modules|profiles|scripts|themes|CHANGELOG|COPYRIGHT|INSTALL|LICENSE|MAINTAINERS|UPGRADE|README)($|/) { return 403; }
    
    # Main application
    location / {
        # Additional rate limiting for main site
        limit_req zone=general burst=50 nodelay;
        
        # Proxy to Vercel or serve static files
        proxy_pass https://smellpin.vercel.app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Proxy timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # Health check endpoint
    location = /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"healthy","service":"nginx-proxy","timestamp":"$time_iso8601"}';
    }
    
    # Security monitoring endpoint
    location = /security/status {
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"protected","ssl":"enabled","hsts":"enabled","csp":"enabled"}';
    }
}

# API server block with enhanced security
server {
    listen 443 ssl http2;
    server_name api.smellpin.com;
    
    # SSL/TLS Configuration (same as above)
    ssl_certificate /etc/nginx/ssl/api.smellpin.com.crt;
    ssl_certificate_key /etc/nginx/ssl/api.smellpin.com.key;
    ssl_trusted_certificate /etc/nginx/ssl/api.smellpin.com.chain.crt;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # API-specific security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin" always;
    add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none';" always;
    add_header X-API-Version "v1.0" always;
    
    # CORS headers
    add_header Access-Control-Allow-Origin "https://smellpin.com" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-API-Key" always;
    add_header Access-Control-Max-Age "86400" always;
    
    server_tokens off;
    more_clear_headers Server;
    more_set_headers "Server: SmellPin-API";
    
    # Connection limits
    limit_conn conn_limit_per_ip 20;
    limit_conn conn_limit_per_server 2000;
    
    # Security blocks
    if ($blocked_country) { return 403; }
    if ($blocked_agent) { return 403; }
    
    # Handle CORS preflight
    location / {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://smellpin.com";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-API-Key";
            add_header Access-Control-Max-Age "86400";
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
        
        # Default API rate limiting
        limit_req zone=api burst=200 nodelay;
        
        # Proxy to backend API
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # API-specific timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Strict rate limiting for authentication endpoints
    location ~* "^/(api/)?(auth|login|register|reset|verify)" {
        limit_req zone=login burst=3 nodelay;
        limit_req zone=strict burst=1 nodelay;
        
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Payment endpoints with extra security
    location ~* "^/api/payments" {
        limit_req zone=strict burst=2 nodelay;
        
        # Only allow from known IPs for payment processing
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        # Add payment processor IPs here
        # allow x.x.x.x/32; # PayPal
        # allow y.y.y.y/32; # Stripe
        
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enhanced security for payments
        proxy_set_header X-Payment-Security "enabled";
        proxy_connect_timeout 3s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health check (unrestricted)
    location = /health {
        access_log off;
        proxy_pass http://localhost:3000/health;
        proxy_set_header Host $host;
    }
    
    # Block direct access to admin endpoints from external IPs
    location ~* "^/api/admin" {
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        limit_req zone=strict burst=1 nodelay;
        
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Monitoring server block
server {
    listen 443 ssl http2;
    server_name monitoring.smellpin.com;
    
    # SSL/TLS Configuration
    ssl_certificate /etc/nginx/ssl/monitoring.smellpin.com.crt;
    ssl_certificate_key /etc/nginx/ssl/monitoring.smellpin.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # Basic auth for monitoring access
    auth_basic "SmellPin Monitoring";
    auth_basic_user_file /etc/nginx/htpasswd;
    
    # IP whitelist for monitoring
    allow 127.0.0.1;
    allow 10.0.0.0/8;
    allow 172.16.0.0/12;
    allow 192.168.0.0/16;
    # Add office/VPN IPs here
    deny all;
    
    # Grafana
    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }
    
    # Prometheus
    location /prometheus/ {
        proxy_pass http://localhost:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # AlertManager
    location /alerts/ {
        proxy_pass http://localhost:9093/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}