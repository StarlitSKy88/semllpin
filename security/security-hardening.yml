version: '3.8'

services:
  # Security-hardened Nginx with SSL/TLS termination
  nginx-security:
    image: nginx:alpine
    container_name: smellpin-nginx-secure
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-secure.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/security-headers.conf:/etc/nginx/conf.d/security-headers.conf:ro
      - ./ssl/certs:/etc/nginx/ssl:ro
      - ./ssl/dhparam.pem:/etc/nginx/dhparam.pem:ro
    environment:
      - TZ=UTC
    networks:
      - security-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # WAF (Web Application Firewall) using ModSecurity
  modsecurity-waf:
    image: owasp/modsecurity-crs:nginx-alpine
    container_name: smellpin-waf
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./waf/custom-rules:/etc/modsecurity.d/custom-rules:ro
      - ./waf/modsecurity.conf:/etc/modsecurity.d/modsecurity.conf:ro
    environment:
      - BACKEND=http://nginx-security:80
      - PARANOIA=2
      - ANOMALY_INBOUND=5
      - ANOMALY_OUTBOUND=4
      - BLOCKING_PARANOIA=2
    networks:
      - security-network
    depends_on:
      - nginx-security

  # Fail2ban for intrusion prevention
  fail2ban:
    build:
      context: ./security/fail2ban
      dockerfile: Dockerfile
    container_name: smellpin-fail2ban
    restart: unless-stopped
    privileged: true
    network_mode: host
    volumes:
      - ./security/fail2ban/jail.local:/etc/fail2ban/jail.local:ro
      - ./security/fail2ban/filter.d:/etc/fail2ban/filter.d:ro
      - /var/log:/var/log:ro
      - fail2ban_data:/var/lib/fail2ban

  # Certificate management with Certbot
  certbot:
    image: certbot/certbot
    container_name: smellpin-certbot
    volumes:
      - ./ssl/certs:/etc/letsencrypt:rw
      - ./ssl/lib:/var/lib/letsencrypt:rw
      - ./ssl/log:/var/log/letsencrypt:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - security-network

  # Security scanning with OWASP ZAP
  security-scanner:
    image: owasp/zap2docker-stable
    container_name: smellpin-security-scanner
    volumes:
      - ./security/zap:/zap/wrk:rw
    environment:
      - ZAP_PORT=8090
    ports:
      - "8090:8090"
    networks:
      - security-network
    command: zap-webswing.sh

  # Vault for secrets management
  vault:
    image: vault:latest
    container_name: smellpin-vault
    restart: unless-stopped
    ports:
      - "8200:8200"
    volumes:
      - vault_data:/vault/data
      - ./security/vault/config.hcl:/vault/config/config.hcl:ro
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
      - VAULT_API_ADDR=http://127.0.0.1:8200
    cap_add:
      - IPC_LOCK
    networks:
      - security-network
    command: vault server -config=/vault/config/config.hcl

  # Database security scanner
  db-security-scanner:
    build:
      context: ./security/db-scanner
      dockerfile: Dockerfile
    container_name: smellpin-db-scanner
    restart: "no"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SCAN_INTERVAL=24h
    volumes:
      - ./security/db-scanner/reports:/app/reports:rw
    networks:
      - security-network
    depends_on:
      - postgres

  # Container security monitoring
  container-security:
    image: aquasec/trivy:latest
    container_name: smellpin-container-security
    restart: "no"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./security/trivy:/output:rw
    command: ["image", "--format", "json", "--output", "/output/security-report.json", "smellpin:latest"]

volumes:
  vault_data:
    driver: local
  fail2ban_data:
    driver: local

networks:
  security-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: smellpin-security
    ipam:
      config:
        - subnet: 172.30.0.0/16