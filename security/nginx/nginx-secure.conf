# Security-hardened Nginx configuration for SmellPin
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Security: Hide Nginx version
server_tokens off;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Security: Hide server information
    more_clear_headers Server;
    more_set_headers "Server: SmellPin";

    # Logging format with security information
    log_format security_log '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           '$request_time $upstream_response_time '
                           '$geoip_country_code $ssl_protocol $ssl_cipher';

    access_log /var/log/nginx/access.log security_log;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Security: Buffer overflow attacks protection
    client_body_buffer_size 1K;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 10;
    client_header_timeout 10;
    keepalive_requests 10;
    reset_timedout_connection on;
    send_timeout 10;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # SSL/TLS Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers on;
    ssl_ecdh_curve secp384r1;
    
    # SSL session optimization
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # DH parameters
    ssl_dhparam /etc/nginx/dhparam.pem;

    # Security headers (included from separate file)
    include /etc/nginx/conf.d/security-headers.conf;

    # Rate limiting for security
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=payment:10m rate=1r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # GeoIP blocking (optional)
    # geoip_country /etc/nginx/GeoIP.dat;
    # map $geoip_country_code $allowed_country {
    #     default yes;
    #     CN no;
    #     RU no;
    # }

    # Upstream servers
    upstream backend {
        least_conn;
        server smellpin-backend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream frontend {
        server smellpin-frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name _;
        
        # Security: Block common attack patterns
        location ~ /\.(ht|git|svn) {
            deny all;
            return 444;
        }
        
        location ~ \.(asp|aspx|jsp|php)$ {
            return 444;
        }
        
        # Allow Let's Encrypt challenges
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }
        
        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Main HTTPS server
    server {
        listen 443 ssl http2;
        server_name api.smellpin.com;

        # SSL certificate
        ssl_certificate /etc/nginx/ssl/api.smellpin.com.crt;
        ssl_certificate_key /etc/nginx/ssl/api.smellpin.com.key;

        # Security: Connection limiting
        limit_conn addr 100;

        # Security: Block bad bots and crawlers
        if ($http_user_agent ~* (nmap|nikto|wikto|sf|sqlmap|bsqlbf|w3af|acunetix|havij|appscan)) {
            return 444;
        }

        # Security: Block requests with no User-Agent
        if ($http_user_agent = "") {
            return 444;
        }

        # API endpoints
        location /api/ {
            # Rate limiting for API
            limit_req zone=api burst=20 nodelay;
            
            # CORS handling
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://smellpin.com' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }

            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Security headers for API
            add_header 'Access-Control-Allow-Origin' 'https://smellpin.com' always;
            add_header 'X-Content-Type-Options' 'nosniff' always;
            add_header 'X-Frame-Options' 'DENY' always;
        }

        # Authentication endpoints (stricter rate limiting)
        location ~ ^/api/(auth|users)/ {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Payment endpoints (strictest rate limiting)
        location ~ ^/api/payments/ {
            limit_req zone=payment burst=2 nodelay;
            
            # Additional security for payment endpoints
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Log payment requests separately
            access_log /var/log/nginx/payment.log security_log;
        }

        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Block access to sensitive files
        location ~ /\.(env|git|htaccess|htpasswd)$ {
            deny all;
            return 444;
        }

        # Block access to backup files
        location ~ \.(bak|backup|old|tmp)$ {
            deny all;
            return 444;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Frontend server
    server {
        listen 443 ssl http2;
        server_name smellpin.com www.smellpin.com;

        # SSL certificate
        ssl_certificate /etc/nginx/ssl/smellpin.com.crt;
        ssl_certificate_key /etc/nginx/ssl/smellpin.com.key;

        # Security: Connection limiting
        limit_conn addr 50;

        root /usr/share/nginx/html;
        index index.html;

        # Static file caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Compress static files
            gzip_static on;
        }

        # Main frontend application
        location / {
            try_files $uri $uri/ /index.html;
            
            # Security headers for frontend
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            
            # CSP for frontend
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://js.stripe.com https://maps.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.smellpin.com https://api.stripe.com; frame-src https://js.stripe.com;" always;
        }

        # Security: Block access to system files
        location ~ ^/(\.user.ini|\.htaccess|\.htpasswd|\.ssh|\.bash_history) {
            deny all;
            return 444;
        }

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }
}

# Additional stream block for TCP/UDP load balancing if needed
stream {
    # Upstream for database connections (if exposing externally)
    upstream postgres_backend {
        server smellpin-postgres:5432 max_fails=3 fail_timeout=30s;
    }

    # Secure PostgreSQL proxy (optional)
    server {
        listen 5433 ssl;
        proxy_pass postgres_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        
        # SSL configuration for database connections
        ssl_certificate /etc/nginx/ssl/db.smellpin.com.crt;
        ssl_certificate_key /etc/nginx/ssl/db.smellpin.com.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS;
        ssl_prefer_server_ciphers on;
    }
}