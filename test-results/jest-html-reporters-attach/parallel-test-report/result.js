window.jest_html_reporters_callback__({"numFailedTestSuites":2,"numFailedTests":33,"numPassedTestSuites":2,"numPassedTests":53,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":4,"numTotalTests":86,"startTime":1756862492221,"success":false,"testResults":[{"numFailingTests":7,"numPassingTests":20,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756862492598,"runtime":230,"slow":false,"start":1756862492368},"testFilePath":"/Users/xiaoyang/Downloads/臭味/tests/unit/services/antiFraudService.test.ts","failureMessage":"  ● AntiFraudService › detectFraud › should detect abnormal movement speed\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      174 |       expect(result.checkResults.some(check => \n      175 |         !check.passed && check.reason.includes('移动速度异常')\n    > 176 |       )).toBe(true);\n          |          ^\n      177 |     });\n      178 |\n      179 |     it('should detect teleportation patterns', async () => {\n\n      at Object.<anonymous> (tests/unit/services/antiFraudService.test.ts:176:10)\n\n  ● AntiFraudService › detectFraud › should detect teleportation patterns\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      206 |       expect(result.checkResults.some(check => \n      207 |         !check.passed && check.reason.includes('疑似瞬移')\n    > 208 |       )).toBe(true);\n          |          ^\n      209 |     });\n      210 |\n      211 |     it('should detect high frequency location reporting', async () => {\n\n      at Object.<anonymous> (tests/unit/services/antiFraudService.test.ts:208:10)\n\n  ● AntiFraudService › detectFraud › should detect high frequency location reporting\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      238 |       expect(result.checkResults.some(check => \n      239 |         !check.passed && check.reason.includes('位置上报频率过高')\n    > 240 |       )).toBe(true);\n          |          ^\n      241 |     });\n      242 |\n      243 |     it('should detect duplicate location reports', async () => {\n\n      at Object.<anonymous> (tests/unit/services/antiFraudService.test.ts:240:10)\n\n  ● AntiFraudService › detectFraud › should detect suspicious reward patterns\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      291 |       expect(result.checkResults.some(check => \n      292 |         !check.passed && check.reason.includes('24小时内获得奖励')\n    > 293 |       )).toBe(true);\n          |          ^\n      294 |     });\n      295 |\n      296 |     it('should detect new account abuse', async () => {\n\n      at Object.<anonymous> (tests/unit/services/antiFraudService.test.ts:293:10)\n\n  ● AntiFraudService › detectFraud › should detect new account abuse\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      315 |       expect(result.checkResults.some(check => \n      316 |         !check.passed && check.reason.includes('新账号异常活跃')\n    > 317 |       )).toBe(true);\n          |          ^\n      318 |     });\n      319 |\n      320 |     it('should detect device inconsistency', async () => {\n\n      at Object.<anonymous> (tests/unit/services/antiFraudService.test.ts:317:10)\n\n  ● AntiFraudService › detectFraud › should handle database errors gracefully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      387 |       const result = await antiFraudService.detectFraud(userId, mockLocationData, annotationId);\n      388 |\n    > 389 |       expect(result.isFraudulent).toBe(true);\n          |                                   ^\n      390 |       expect(result.fraudScore).toBe(1.0);\n      391 |       expect(result.reasons).toContain('防作弊检测系统错误');\n      392 |     });\n\n      at Object.<anonymous> (tests/unit/services/antiFraudService.test.ts:389:35)\n\n  ● AntiFraudService › fraud score calculation › should handle empty checks\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 0\n    Received: NaN\n\n      621 |       const fraudScore = calculateFraudScore([]);\n      622 |       \n    > 623 |       expect(fraudScore).toBe(0);\n          |                          ^\n      624 |     });\n      625 |   });\n      626 |\n\n      at Object.<anonymous> (tests/unit/services/antiFraudService.test.ts:623:26)\n","testResults":[{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":3,"failureMessages":[],"fullName":"AntiFraudService detectFraud should detect no fraud for normal behavior","status":"passed","title":"should detect no fraud for normal behavior"},{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService detectFraud should detect GPS spoofing with poor accuracy","status":"passed","title":"should detect GPS spoofing with poor accuracy"},{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":2,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/xiaoyang/Downloads/臭味/tests/unit/services/antiFraudService.test.ts:176:10)"],"fullName":"AntiFraudService detectFraud should detect abnormal movement speed","status":"failed","title":"should detect abnormal movement speed"},{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":3,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/xiaoyang/Downloads/臭味/tests/unit/services/antiFraudService.test.ts:208:10)"],"fullName":"AntiFraudService detectFraud should detect teleportation patterns","status":"failed","title":"should detect teleportation patterns"},{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/xiaoyang/Downloads/臭味/tests/unit/services/antiFraudService.test.ts:240:10)"],"fullName":"AntiFraudService detectFraud should detect high frequency location reporting","status":"failed","title":"should detect high frequency location reporting"},{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService detectFraud should detect duplicate location reports","status":"passed","title":"should detect duplicate location reports"},{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":2,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/xiaoyang/Downloads/臭味/tests/unit/services/antiFraudService.test.ts:293:10)"],"fullName":"AntiFraudService detectFraud should detect suspicious reward patterns","status":"failed","title":"should detect suspicious reward patterns"},{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/xiaoyang/Downloads/臭味/tests/unit/services/antiFraudService.test.ts:317:10)"],"fullName":"AntiFraudService detectFraud should detect new account abuse","status":"failed","title":"should detect new account abuse"},{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService detectFraud should detect device inconsistency","status":"passed","title":"should detect device inconsistency"},{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService detectFraud should handle missing device info","status":"passed","title":"should handle missing device info"},{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":19,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/xiaoyang/Downloads/臭味/tests/unit/services/antiFraudService.test.ts:389:35)"],"fullName":"AntiFraudService detectFraud should handle database errors gracefully","status":"failed","title":"should handle database errors gracefully"},{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":3,"failureMessages":[],"fullName":"AntiFraudService detectFraud should calculate fraud score correctly","status":"passed","title":"should calculate fraud score correctly"},{"ancestorTitles":["AntiFraudService","detectFraud"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService detectFraud should log anti-fraud results","status":"passed","title":"should log anti-fraud results"},{"ancestorTitles":["AntiFraudService","getUserFraudHistory"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService getUserFraudHistory should retrieve user fraud history successfully","status":"passed","title":"should retrieve user fraud history successfully"},{"ancestorTitles":["AntiFraudService","getUserFraudHistory"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService getUserFraudHistory should handle empty fraud history","status":"passed","title":"should handle empty fraud history"},{"ancestorTitles":["AntiFraudService","getUserFraudHistory"],"duration":2,"failureMessages":[],"fullName":"AntiFraudService getUserFraudHistory should handle database errors in fraud history","status":"passed","title":"should handle database errors in fraud history"},{"ancestorTitles":["AntiFraudService","shouldBlockUser"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService shouldBlockUser should block user with high risk score","status":"passed","title":"should block user with high risk score"},{"ancestorTitles":["AntiFraudService","shouldBlockUser"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService shouldBlockUser should block user with multiple recent violations","status":"passed","title":"should block user with multiple recent violations"},{"ancestorTitles":["AntiFraudService","shouldBlockUser"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService shouldBlockUser should block user with moderate risk and violations","status":"passed","title":"should block user with moderate risk and violations"},{"ancestorTitles":["AntiFraudService","shouldBlockUser"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService shouldBlockUser should not block user with low risk and no violations","status":"passed","title":"should not block user with low risk and no violations"},{"ancestorTitles":["AntiFraudService","shouldBlockUser"],"duration":2,"failureMessages":[],"fullName":"AntiFraudService shouldBlockUser should handle database errors conservatively","status":"passed","title":"should handle database errors conservatively"},{"ancestorTitles":["AntiFraudService","distance calculation"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService distance calculation should calculate distance correctly","status":"passed","title":"should calculate distance correctly"},{"ancestorTitles":["AntiFraudService","distance calculation"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService distance calculation should handle same location","status":"passed","title":"should handle same location"},{"ancestorTitles":["AntiFraudService","fraud score calculation"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService fraud score calculation should calculate weighted fraud score","status":"passed","title":"should calculate weighted fraud score"},{"ancestorTitles":["AntiFraudService","fraud score calculation"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: NaN\n    at Object.<anonymous> (/Users/xiaoyang/Downloads/臭味/tests/unit/services/antiFraudService.test.ts:623:26)\n    at Promise.then.completed (/Users/xiaoyang/Downloads/臭味/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/xiaoyang/Downloads/臭味/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/xiaoyang/Downloads/臭味/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/xiaoyang/Downloads/臭味/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/xiaoyang/Downloads/臭味/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/xiaoyang/Downloads/臭味/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/xiaoyang/Downloads/臭味/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/xiaoyang/Downloads/臭味/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/xiaoyang/Downloads/臭味/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/xiaoyang/Downloads/臭味/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/xiaoyang/Downloads/臭味/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/xiaoyang/Downloads/臭味/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"AntiFraudService fraud score calculation should handle empty checks","status":"failed","title":"should handle empty checks"},{"ancestorTitles":["AntiFraudService","edge cases and performance"],"duration":6,"failureMessages":[],"fullName":"AntiFraudService edge cases and performance should handle concurrent fraud detection","status":"passed","title":"should handle concurrent fraud detection"},{"ancestorTitles":["AntiFraudService","edge cases and performance"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService edge cases and performance should complete fraud detection within reasonable time","status":"passed","title":"should complete fraud detection within reasonable time"}]},{"numFailingTests":0,"numPassingTests":13,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756862492650,"runtime":47,"slow":false,"start":1756862492603},"testFilePath":"/Users/xiaoyang/Downloads/臭味/tests/unit/services/rewardCalculationService.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RewardCalculationService","calculateReward"],"duration":1,"failureMessages":[],"fullName":"RewardCalculationService calculateReward should calculate reward successfully for eligible user","status":"passed","title":"should calculate reward successfully for eligible user"},{"ancestorTitles":["RewardCalculationService","calculateReward"],"duration":0,"failureMessages":[],"fullName":"RewardCalculationService calculateReward should reject reward for insufficient GPS accuracy","status":"passed","title":"should reject reward for insufficient GPS accuracy"},{"ancestorTitles":["RewardCalculationService","calculateReward"],"duration":1,"failureMessages":[],"fullName":"RewardCalculationService calculateReward should reject reward for insufficient stay duration","status":"passed","title":"should reject reward for insufficient stay duration"},{"ancestorTitles":["RewardCalculationService","calculateReward"],"duration":1,"failureMessages":[],"fullName":"RewardCalculationService calculateReward should reject reward if user already received reward for annotation","status":"passed","title":"should reject reward if user already received reward for annotation"},{"ancestorTitles":["RewardCalculationService","calculateReward"],"duration":0,"failureMessages":[],"fullName":"RewardCalculationService calculateReward should handle annotation not found","status":"passed","title":"should handle annotation not found"},{"ancestorTitles":["RewardCalculationService","calculateReward"],"duration":1,"failureMessages":[],"fullName":"RewardCalculationService calculateReward should apply correct time decay factor","status":"passed","title":"should apply correct time decay factor"},{"ancestorTitles":["RewardCalculationService","calculateReward"],"duration":0,"failureMessages":[],"fullName":"RewardCalculationService calculateReward should calculate combo bonus correctly","status":"passed","title":"should calculate combo bonus correctly"},{"ancestorTitles":["RewardCalculationService","calculateReward"],"duration":15,"failureMessages":[],"fullName":"RewardCalculationService calculateReward should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully"},{"ancestorTitles":["RewardCalculationService","calculateReward"],"duration":1,"failureMessages":[],"fullName":"RewardCalculationService calculateReward should ensure minimum reward amount","status":"passed","title":"should ensure minimum reward amount"},{"ancestorTitles":["RewardCalculationService","calculateRewardWithDB"],"duration":1,"failureMessages":[],"fullName":"RewardCalculationService calculateRewardWithDB should call database function correctly","status":"passed","title":"should call database function correctly"},{"ancestorTitles":["RewardCalculationService","calculateRewardWithDB"],"duration":1,"failureMessages":[],"fullName":"RewardCalculationService calculateRewardWithDB should handle database errors","status":"passed","title":"should handle database errors"},{"ancestorTitles":["RewardCalculationService","calculateRewardWithDB"],"duration":1,"failureMessages":[],"fullName":"RewardCalculationService calculateRewardWithDB should handle null/undefined results","status":"passed","title":"should handle null/undefined results"},{"ancestorTitles":["RewardCalculationService","private method testing through reflection"],"duration":1,"failureMessages":[],"fullName":"RewardCalculationService private method testing through reflection should handle time decay correctly for different time periods","status":"passed","title":"should handle time decay correctly for different time periods"}]},{"numFailingTests":26,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756862492950,"runtime":296,"slow":false,"start":1756862492654},"testFilePath":"/Users/xiaoyang/Downloads/臭味/tests/unit/models/User.test.ts","failureMessage":"  ● User Model › User Creation › should create a new user with valid data\n\n    AggregateError:\n\n\n\n  ● User Model › User Creation › should create a new user with valid data\n\n    AggregateError:\n\n\n\n  ● User Model › User Creation › should hash password during user creation\n\n    AggregateError:\n\n\n\n  ● User Model › User Creation › should hash password during user creation\n\n    AggregateError:\n\n\n\n  ● User Model › User Creation › should reject user creation with invalid email\n\n    AggregateError:\n\n\n\n  ● User Model › User Creation › should reject user creation with invalid email\n\n    AggregateError:\n\n\n\n  ● User Model › User Creation › should reject user creation with duplicate username\n\n    AggregateError:\n\n\n\n  ● User Model › User Creation › should reject user creation with duplicate username\n\n    AggregateError:\n\n\n\n  ● User Model › User Creation › should reject user creation with duplicate email\n\n    AggregateError:\n\n\n\n  ● User Model › User Creation › should reject user creation with duplicate email\n\n    AggregateError:\n\n\n\n  ● User Model › User Authentication › should authenticate user with correct credentials\n\n    AggregateError:\n\n\n\n  ● User Model › User Authentication › should authenticate user with correct credentials\n\n    AggregateError:\n\n\n\n  ● User Model › User Authentication › should fail authentication with incorrect password\n\n    AggregateError:\n\n\n\n  ● User Model › User Authentication › should fail authentication with incorrect password\n\n    AggregateError:\n\n\n\n  ● User Model › User Authentication › should fail authentication with non-existent email\n\n    AggregateError:\n\n\n\n  ● User Model › User Authentication › should fail authentication with non-existent email\n\n    AggregateError:\n\n\n\n  ● User Model › User Authentication › should fail authentication with inactive user\n\n    AggregateError:\n\n\n\n  ● User Model › User Authentication › should fail authentication with inactive user\n\n    AggregateError:\n\n\n\n  ● User Model › User Profile Management › should update user profile successfully\n\n    AggregateError:\n\n\n\n  ● User Model › User Profile Management › should update user profile successfully\n\n    AggregateError:\n\n\n\n  ● User Model › User Profile Management › should update password correctly\n\n    AggregateError:\n\n\n\n  ● User Model › User Profile Management › should update password correctly\n\n    AggregateError:\n\n\n\n  ● User Model › User Profile Management › should verify email successfully\n\n    AggregateError:\n\n\n\n  ● User Model › User Profile Management › should verify email successfully\n\n    AggregateError:\n\n\n\n  ● User Model › User Statistics › should get user statistics\n\n    AggregateError:\n\n\n\n  ● User Model › User Statistics › should get user statistics\n\n    AggregateError:\n\n\n\n  ● User Model › User Search and Retrieval › should find user by ID\n\n    AggregateError:\n\n\n\n  ● User Model › User Search and Retrieval › should find user by ID\n\n    AggregateError:\n\n\n\n  ● User Model › User Search and Retrieval › should find user by email\n\n    AggregateError:\n\n\n\n  ● User Model › User Search and Retrieval › should find user by email\n\n    AggregateError:\n\n\n\n  ● User Model › User Search and Retrieval › should find user by username\n\n    AggregateError:\n\n\n\n  ● User Model › User Search and Retrieval › should find user by username\n\n    AggregateError:\n\n\n\n  ● User Model › User Search and Retrieval › should find all active users\n\n    AggregateError:\n\n\n\n  ● User Model › User Search and Retrieval › should find all active users\n\n    AggregateError:\n\n\n\n  ● User Model › User Search and Retrieval › should paginate user results\n\n    AggregateError:\n\n\n\n  ● User Model › User Search and Retrieval › should paginate user results\n\n    AggregateError:\n\n\n\n  ● User Model › User Deletion › should soft delete user\n\n    AggregateError:\n\n\n\n  ● User Model › User Deletion › should soft delete user\n\n    AggregateError:\n\n\n\n  ● User Model › User Deletion › should not find soft deleted user in normal queries\n\n    AggregateError:\n\n\n\n  ● User Model › User Deletion › should not find soft deleted user in normal queries\n\n    AggregateError:\n\n\n\n  ● User Model › Edge Cases and Error Handling › should handle empty search queries gracefully\n\n    AggregateError:\n\n\n\n  ● User Model › Edge Cases and Error Handling › should handle empty search queries gracefully\n\n    AggregateError:\n\n\n\n  ● User Model › Edge Cases and Error Handling › should handle invalid user ID gracefully\n\n    AggregateError:\n\n\n\n  ● User Model › Edge Cases and Error Handling › should handle invalid user ID gracefully\n\n    AggregateError:\n\n\n\n  ● User Model › Edge Cases and Error Handling › should handle non-existent user updates gracefully\n\n    AggregateError:\n\n\n\n  ● User Model › Edge Cases and Error Handling › should handle non-existent user updates gracefully\n\n    AggregateError:\n\n\n\n  ● User Model › Edge Cases and Error Handling › should validate email format\n\n    AggregateError:\n\n\n\n  ● User Model › Edge Cases and Error Handling › should validate email format\n\n    AggregateError:\n\n\n\n  ● User Model › Edge Cases and Error Handling › should enforce username length constraints\n\n    AggregateError:\n\n\n\n  ● User Model › Edge Cases and Error Handling › should enforce username length constraints\n\n    AggregateError:\n\n\n\n  ● User Model › Edge Cases and Error Handling › should enforce password strength requirements\n\n    AggregateError:\n\n\n\n  ● User Model › Edge Cases and Error Handling › should enforce password strength requirements\n\n    AggregateError:\n\n\n","testResults":[{"ancestorTitles":["User Model","User Creation"],"duration":6,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Creation should create a new user with valid data","status":"failed","title":"should create a new user with valid data"},{"ancestorTitles":["User Model","User Creation"],"duration":4,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Creation should hash password during user creation","status":"failed","title":"should hash password during user creation"},{"ancestorTitles":["User Model","User Creation"],"duration":4,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Creation should reject user creation with invalid email","status":"failed","title":"should reject user creation with invalid email"},{"ancestorTitles":["User Model","User Creation"],"duration":8,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Creation should reject user creation with duplicate username","status":"failed","title":"should reject user creation with duplicate username"},{"ancestorTitles":["User Model","User Creation"],"duration":4,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Creation should reject user creation with duplicate email","status":"failed","title":"should reject user creation with duplicate email"},{"ancestorTitles":["User Model","User Authentication"],"duration":4,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Authentication should authenticate user with correct credentials","status":"failed","title":"should authenticate user with correct credentials"},{"ancestorTitles":["User Model","User Authentication"],"duration":5,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Authentication should fail authentication with incorrect password","status":"failed","title":"should fail authentication with incorrect password"},{"ancestorTitles":["User Model","User Authentication"],"duration":4,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Authentication should fail authentication with non-existent email","status":"failed","title":"should fail authentication with non-existent email"},{"ancestorTitles":["User Model","User Authentication"],"duration":3,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Authentication should fail authentication with inactive user","status":"failed","title":"should fail authentication with inactive user"},{"ancestorTitles":["User Model","User Profile Management"],"duration":5,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Profile Management should update user profile successfully","status":"failed","title":"should update user profile successfully"},{"ancestorTitles":["User Model","User Profile Management"],"duration":4,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Profile Management should update password correctly","status":"failed","title":"should update password correctly"},{"ancestorTitles":["User Model","User Profile Management"],"duration":2,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Profile Management should verify email successfully","status":"failed","title":"should verify email successfully"},{"ancestorTitles":["User Model","User Statistics"],"duration":2,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Statistics should get user statistics","status":"failed","title":"should get user statistics"},{"ancestorTitles":["User Model","User Search and Retrieval"],"duration":3,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Search and Retrieval should find user by ID","status":"failed","title":"should find user by ID"},{"ancestorTitles":["User Model","User Search and Retrieval"],"duration":3,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Search and Retrieval should find user by email","status":"failed","title":"should find user by email"},{"ancestorTitles":["User Model","User Search and Retrieval"],"duration":2,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Search and Retrieval should find user by username","status":"failed","title":"should find user by username"},{"ancestorTitles":["User Model","User Search and Retrieval"],"duration":3,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Search and Retrieval should find all active users","status":"failed","title":"should find all active users"},{"ancestorTitles":["User Model","User Search and Retrieval"],"duration":3,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Search and Retrieval should paginate user results","status":"failed","title":"should paginate user results"},{"ancestorTitles":["User Model","User Deletion"],"duration":4,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Deletion should soft delete user","status":"failed","title":"should soft delete user"},{"ancestorTitles":["User Model","User Deletion"],"duration":3,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model User Deletion should not find soft deleted user in normal queries","status":"failed","title":"should not find soft deleted user in normal queries"},{"ancestorTitles":["User Model","Edge Cases and Error Handling"],"duration":2,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model Edge Cases and Error Handling should handle empty search queries gracefully","status":"failed","title":"should handle empty search queries gracefully"},{"ancestorTitles":["User Model","Edge Cases and Error Handling"],"duration":3,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model Edge Cases and Error Handling should handle invalid user ID gracefully","status":"failed","title":"should handle invalid user ID gracefully"},{"ancestorTitles":["User Model","Edge Cases and Error Handling"],"duration":3,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model Edge Cases and Error Handling should handle non-existent user updates gracefully","status":"failed","title":"should handle non-existent user updates gracefully"},{"ancestorTitles":["User Model","Edge Cases and Error Handling"],"duration":3,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model Edge Cases and Error Handling should validate email format","status":"failed","title":"should validate email format"},{"ancestorTitles":["User Model","Edge Cases and Error Handling"],"duration":3,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model Edge Cases and Error Handling should enforce username length constraints","status":"failed","title":"should enforce username length constraints"},{"ancestorTitles":["User Model","Edge Cases and Error Handling"],"duration":3,"failureMessages":["AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)","AggregateError: \n    at internalConnectMultiple (node:net:1122:18)\n    at afterConnectMultiple (node:net:1689:7)"],"fullName":"User Model Edge Cases and Error Handling should enforce password strength requirements","status":"failed","title":"should enforce password strength requirements"}]},{"numFailingTests":0,"numPassingTests":20,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756862493019,"runtime":67,"slow":false,"start":1756862492952},"testFilePath":"/Users/xiaoyang/Downloads/臭味/src/services/__tests__/antiFraudService.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AntiFraudService","validateGPSAccuracy"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService validateGPSAccuracy should accept high accuracy GPS readings","status":"passed","title":"should accept high accuracy GPS readings"},{"ancestorTitles":["AntiFraudService","validateGPSAccuracy"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService validateGPSAccuracy should reject low accuracy GPS readings","status":"passed","title":"should reject low accuracy GPS readings"},{"ancestorTitles":["AntiFraudService","validateGPSAccuracy"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService validateGPSAccuracy should reject stale GPS readings","status":"passed","title":"should reject stale GPS readings"},{"ancestorTitles":["AntiFraudService","validateGPSAccuracy"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService validateGPSAccuracy should reject invalid coordinates","status":"passed","title":"should reject invalid coordinates"},{"ancestorTitles":["AntiFraudService","analyzeMovementPattern"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService analyzeMovementPattern should detect normal walking pattern","status":"passed","title":"should detect normal walking pattern"},{"ancestorTitles":["AntiFraudService","analyzeMovementPattern"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService analyzeMovementPattern should detect teleportation (impossible speed)","status":"passed","title":"should detect teleportation (impossible speed)"},{"ancestorTitles":["AntiFraudService","analyzeMovementPattern"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService analyzeMovementPattern should detect stationary spoofing","status":"passed","title":"should detect stationary spoofing"},{"ancestorTitles":["AntiFraudService","detectDeviceFingerprinting"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService detectDeviceFingerprinting should create unique device fingerprint","status":"passed","title":"should create unique device fingerprint"},{"ancestorTitles":["AntiFraudService","detectDeviceFingerprinting"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService detectDeviceFingerprinting should detect multiple accounts from same device","status":"passed","title":"should detect multiple accounts from same device"},{"ancestorTitles":["AntiFraudService","analyzeRewardClaimingPattern"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService analyzeRewardClaimingPattern should detect normal claiming pattern","status":"passed","title":"should detect normal claiming pattern"},{"ancestorTitles":["AntiFraudService","analyzeRewardClaimingPattern"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService analyzeRewardClaimingPattern should detect rapid successive claims (bot behavior)","status":"passed","title":"should detect rapid successive claims (bot behavior)"},{"ancestorTitles":["AntiFraudService","analyzeRewardClaimingPattern"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService analyzeRewardClaimingPattern should detect unusual reward amounts","status":"passed","title":"should detect unusual reward amounts"},{"ancestorTitles":["AntiFraudService","checkGeofenceManipulation"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService checkGeofenceManipulation should detect normal geofence interaction","status":"passed","title":"should detect normal geofence interaction"},{"ancestorTitles":["AntiFraudService","checkGeofenceManipulation"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService checkGeofenceManipulation should detect location outside geofence","status":"passed","title":"should detect location outside geofence"},{"ancestorTitles":["AntiFraudService","calculateRiskScore"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService calculateRiskScore should calculate low risk score for normal user","status":"passed","title":"should calculate low risk score for normal user"},{"ancestorTitles":["AntiFraudService","calculateRiskScore"],"duration":3,"failureMessages":[],"fullName":"AntiFraudService calculateRiskScore should calculate high risk score for suspicious user","status":"passed","title":"should calculate high risk score for suspicious user"},{"ancestorTitles":["AntiFraudService","recordSuspiciousActivity"],"duration":1,"failureMessages":[],"fullName":"AntiFraudService recordSuspiciousActivity should record suspicious activity","status":"passed","title":"should record suspicious activity"},{"ancestorTitles":["AntiFraudService","shouldBlockUser"],"duration":12,"failureMessages":[],"fullName":"AntiFraudService shouldBlockUser should not block user with low risk score","status":"passed","title":"should not block user with low risk score"},{"ancestorTitles":["AntiFraudService","shouldBlockUser"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService shouldBlockUser should block user with high risk score","status":"passed","title":"should block user with high risk score"},{"ancestorTitles":["AntiFraudService","shouldBlockUser"],"duration":0,"failureMessages":[],"fullName":"AntiFraudService shouldBlockUser should block user with multiple violations","status":"passed","title":"should block user with multiple violations"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/controllers/**/*.ts","src/services/**/*.ts","src/models/**/*.ts","src/middleware/**/*.ts","src/routes/**/*.ts","src/utils/**/*.ts","!src/**/*.d.ts","!src/server.ts","!src/migrations/**","!src/seeds/**","!src/__mocks__/**","!src/types/**"],"coverageDirectory":"/Users/xiaoyang/Downloads/臭味/coverage/parallel","coverageProvider":"babel","coverageReporters":["text-summary","lcov","html","json"],"coverageThreshold":{"global":{"branches":75,"functions":75,"lines":75,"statements":75}},"detectLeaks":false,"detectOpenHandles":true,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":6,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/Users/xiaoyang/Downloads/臭味/node_modules/jest-junit/index.js",{"outputDirectory":"test-results","outputName":"parallel-test-results.xml","suiteName":"SmellPin Parallel Tests"}],["/Users/xiaoyang/Downloads/臭味/node_modules/jest-html-reporters/index.js",{"publicPath":"test-results","filename":"parallel-test-report.html","pageTitle":"SmellPin Parallel Test Report","expand":true,"hideIcon":false}]],"rootDir":"/Users/xiaoyang/Downloads/臭味","runTestsByPath":false,"seed":-819630926,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/Users/xiaoyang/Downloads/臭味/tests/setup/testSequencer.js","testTimeout":45000,"updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1756862493023,"_reporterOptions":{"publicPath":"test-results","filename":"parallel-test-report.html","expand":true,"pageTitle":"SmellPin Parallel Test Report","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})