"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const socialController_1 = require("../controllers/socialController");
const notificationController_1 = require("../controllers/notificationController");
const shareController_1 = require("../controllers/shareController");
const auth_1 = require("../middleware/auth");
const router = (0, express_1.Router)();
router.get('/annotations/:annotationId/shares/stats', shareController_1.getAnnotationShareStats);
router.get('/shares/popular', shareController_1.getPopularShares);
router.get('/annotations/:annotationId/share-link', shareController_1.generateShareLink);
router.use(auth_1.authMiddleware);
router.post('/follow/:userId', socialController_1.followUser);
router.delete('/follow/:userId', socialController_1.unfollowUser);
router.get('/following/:userId', socialController_1.getFollowing);
router.get('/followers/:userId', socialController_1.getFollowers);
router.post('/annotations/:annotationId/like', socialController_1.likeAnnotation);
router.delete('/annotations/:annotationId/like', socialController_1.unlikeAnnotation);
router.post('/annotations/:annotationId/favorite', socialController_1.favoriteAnnotation);
router.delete('/annotations/:annotationId/favorite', socialController_1.unfavoriteAnnotation);
router.get('/favorites', socialController_1.getUserFavorites);
router.get('/notifications', socialController_1.getUserNotifications);
router.patch('/notifications/:notificationId/read', socialController_1.markNotificationAsRead);
router.patch('/notifications/read-all', socialController_1.markAllNotificationsAsRead);
router.delete('/notifications', notificationController_1.deleteNotifications);
router.get('/notifications/settings', notificationController_1.getUserNotificationSettings);
router.patch('/notifications/settings', notificationController_1.updateUserNotificationSettings);
router.get('/notifications/stats', notificationController_1.getNotificationStats);
router.post('/notifications/test', notificationController_1.testNotification);
router.post('/annotations/:annotationId/share', shareController_1.createShareRecord);
router.get('/shares/history', shareController_1.getUserShareHistory);
exports.default = router;
//# sourceMappingURL=socialRoutes.js.map