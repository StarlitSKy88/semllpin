import { Request, Response, NextFunction } from 'express';
export declare const getAnnotationDetails: (req: Request, res: Response, next: NextFunction) => void;
export declare const getPendingAnnotations: (req: Request, res: Response, next: NextFunction) => void;
export declare const batchModerateAnnotations: (req: Request, res: Response, next: NextFunction) => void;
export declare const getModerationStats: (req: Request, res: Response, next: NextFunction) => void;
export declare const handlePaidAnnotationSuccess: (req: Request, res: Response, next: NextFunction) => void;
export declare const createPaidPrankAnnotation: (req: Request, res: Response, next: NextFunction) => void;
export declare const createAnnotation: (req: Request, res: Response, next: NextFunction) => void;
export declare const getAnnotationById: (req: Request, res: Response, next: NextFunction) => void;
export declare const updateAnnotation: (req: Request, res: Response, next: NextFunction) => void;
export declare const getAnnotationsList: (req: Request, res: Response, next: NextFunction) => void;
export declare const getMapData: (req: Request, res: Response, next: NextFunction) => void;
export declare const getNearbyAnnotations: (req: Request, res: Response, next: NextFunction) => void;
export declare const likeAnnotation: (req: Request, res: Response, next: NextFunction) => void;
export declare const unlikeAnnotation: (req: Request, res: Response, next: NextFunction) => void;
export declare const getUserAnnotations: (req: Request, res: Response, next: NextFunction) => void;
export declare const getAnnotationStats: (req: Request, res: Response, next: NextFunction) => void;
export declare const deleteAnnotation: (req: Request, res: Response, next: NextFunction) => void;
export declare const moderateAnnotation: (req: Request, res: Response, next: NextFunction) => void;
declare const _default: {
    createAnnotation: (req: Request, res: Response, next: NextFunction) => void;
    createPaidPrankAnnotation: (req: Request, res: Response, next: NextFunction) => void;
    handlePaidAnnotationSuccess: (req: Request, res: Response, next: NextFunction) => void;
    getAnnotationDetails: (req: Request, res: Response, next: NextFunction) => void;
    getPendingAnnotations: (req: Request, res: Response, next: NextFunction) => void;
    batchModerateAnnotations: (req: Request, res: Response, next: NextFunction) => void;
    getModerationStats: (req: Request, res: Response, next: NextFunction) => void;
    getAnnotationById: (req: Request, res: Response, next: NextFunction) => void;
    updateAnnotation: (req: Request, res: Response, next: NextFunction) => void;
    getAnnotationsList: (req: Request, res: Response, next: NextFunction) => void;
    getMapData: (req: Request, res: Response, next: NextFunction) => void;
    getNearbyAnnotations: (req: Request, res: Response, next: NextFunction) => void;
    likeAnnotation: (req: Request, res: Response, next: NextFunction) => void;
    unlikeAnnotation: (req: Request, res: Response, next: NextFunction) => void;
    getUserAnnotations: (req: Request, res: Response, next: NextFunction) => void;
    getAnnotationStats: (req: Request, res: Response, next: NextFunction) => void;
    deleteAnnotation: (req: Request, res: Response, next: NextFunction) => void;
    moderateAnnotation: (req: Request, res: Response, next: NextFunction) => void;
};
export default _default;
//# sourceMappingURL=annotationController.d.ts.map