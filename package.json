{
  "name": "smellpin-backend",
  "version": "1.0.0",
  "description": "SmellPin全球臭味标注平台后端服务",
  "main": "dist/server.js",
  "scripts": {
    "dev": "nodemon --exec ts-node src/server.ts",
    "build": "tsc",
    "start": "node dist/server.js",
    "start:prod": "NODE_ENV=production node dist/server.js",
    "test": "npm run test:frontend && npm run test:backend",
    "test:backend": "jest --config jest.backend.config.js",
    "test:frontend": "jest --config jest.frontend.config.js",
    "test:watch": "jest --watch --config jest.frontend.config.js",
    "test:coverage": "jest --coverage --config jest.frontend.config.js && jest --coverage --config jest.backend.config.js",
    "test:parallel": "jest --config jest.parallel.config.js",
    "test:parallel:serial": "node scripts/parallel-test-runner.js --serial",
    "test:production": "node scripts/production-test-runner.js",
    "test:health": "node scripts/production-test-runner.js --health",
    "deploy:check": "npm run test:production && npm run lint && npm run type-check",
    "test:database": "node test-database-validation.js",
    "test:integration": "jest --config jest.backend.config.js --testMatch '**/integration/**/*.test.ts'",
    "test:third-party": "node test-third-party-integrations.js",
    "test:all": "npm run test && npm run test:comprehensive",
    "test:unit": "npm run test:backend -- --testMatch '**/unit/**/*.test.ts'",
    "test:unit:quick": "npm run test:unit -- --onlyChanged",
    "test:parallel:smoke": "npx ts-node tests/parallel/multi-agent-simulator.ts smoke",
    "test:parallel:full": "npx ts-node tests/parallel/multi-agent-simulator.ts full",
    "test:comprehensive": "npx ts-node tests/comprehensive/comprehensive-test-runner.ts",
    "test:comprehensive:smoke": "npx ts-node tests/comprehensive/comprehensive-test-runner.ts smoke",
    "test:comprehensive:regression": "npx ts-node tests/comprehensive/comprehensive-test-runner.ts regression",
    "test:comprehensive:performance": "npx ts-node tests/comprehensive/comprehensive-test-runner.ts performance",
    "test:comprehensive:all": "npx ts-node tests/comprehensive/comprehensive-test-runner.ts comprehensive",
    "dashboard:start": "npx ts-node tests/dashboard/dashboard-server.ts",
    "test:enhanced": "chmod +x scripts/run-enhanced-tests.sh && ./scripts/run-enhanced-tests.sh",
    "test:enhanced:smoke": "chmod +x scripts/run-enhanced-tests.sh && ./scripts/run-enhanced-tests.sh smoke true 2",
    "test:enhanced:parallel": "chmod +x scripts/run-enhanced-tests.sh && ./scripts/run-enhanced-tests.sh parallel true 4",
    "test:enhanced:comprehensive": "chmod +x scripts/run-enhanced-tests.sh && ./scripts/run-enhanced-tests.sh comprehensive true 8",
    "test:enhanced:all": "chmod +x scripts/run-enhanced-tests.sh && ./scripts/run-enhanced-tests.sh all true 4",
    "test:performance": "node tests/performance/loadTest.js",
    "artillery:smoke": "artillery run artillery/smoke-test.yml",
    "artillery:load": "artillery run artillery/base-config.yml",
    "artillery:stress": "artillery run artillery/stress-test.yml",
    "artillery:multi-agent": "artillery run artillery/multi-agent-test.yml",
    "artillery:report": "artillery run artillery/base-config.yml --output report.json && artillery report report.json",
    "test:security": "npm run test:gps-spoofing && npm run test:anti-fraud && npm run test:payment-security",
    "test:gps-spoofing": "jest --config jest.backend.config.js --testMatch '**/security/gpsSpoof.test.ts'",
    "test:anti-fraud": "jest --config jest.backend.config.js --testMatch '**/security/**/*.test.ts'",
    "test:payment-security": "jest --config jest.backend.config.js --testMatch '**/security/payment*.test.ts'",
    "test:user-journeys": "playwright test --config=playwright.config.ts",
    "test:user-journeys:headed": "HEADLESS=false npm run test:user-journeys",
    "test:user-journeys:runner": "ts-node tests/e2e/user-journey-runner.ts",
    "test:user-journeys:report": "playwright show-report",
    "test:user-journeys:mobile": "playwright test --config=playwright.config.ts --project='Mobile Chrome' --project='Mobile Safari'",
    "test:user-journeys:desktop": "playwright test --config=playwright.config.ts --project='chromium' --project='firefox' --project='webkit'",
    "test:e2e:comprehensive": "ts-node tests/e2e/run-comprehensive-tests.ts",
    "test:e2e:frontend": "playwright test tests/e2e/comprehensive-frontend-e2e.spec.ts",
    "test:e2e:mobile": "playwright test tests/e2e/mobile-specific-tests.spec.ts",
    "test:e2e:performance": "playwright test tests/e2e/performance-stress-tests.spec.ts",
    "test:e2e:all": "npm run test:e2e:frontend && npm run test:e2e:mobile && npm run test:e2e:performance",
    "test:e2e:report": "npm run test:e2e:comprehensive && open test-results/e2e-test-report.html",
    "test:user-simulation": "node scripts/user-simulation-testing.js",
    "test:user-simulation:headless": "HEADLESS=true node scripts/user-simulation-testing.js",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "type-check": "tsc --noEmit",
    "format": "prettier --write \"src/**/*.{ts,js,json}\"",
    "format:check": "prettier --check \"src/**/*.{ts,js,json}\"",
    "migrate": "knex migrate:latest",
    "migrate:rollback": "knex migrate:rollback",
    "migrate:test": "NODE_ENV=test knex migrate:latest",
    "seed": "knex seed:run",
    "seed:test": "NODE_ENV=test knex seed:run",
    "db:reset": "npm run migrate:rollback && npm run migrate && npm run seed",
    "db:reset:test": "NODE_ENV=test npm run migrate:rollback && npm run migrate:test && npm run seed:test",
    "security:scan": "npm audit --audit-level moderate && snyk test",
    "security:fix": "npm audit fix",
    "docker:build": "docker build -t smellpin .",
    "docker:run": "docker run -p 3000:3000 smellpin",
    "docker:test": "docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit",
    "pre-commit": "npm run lint && npm run type-check && npm run test:unit:quick",
    "prepare": "node -e \"try{require('husky').install()}catch(e){if(e.code!=='MODULE_NOT_FOUND')throw e}\"",
    "security:check": "node scripts/security-check.js",
    "security:audit": "npm audit",
    "security:test": "node security-test.js"
  },
  "keywords": [
    "smell",
    "annotation",
    "map",
    "environment",
    "pollution"
  ],
  "author": "SmellPin Team",
  "license": "MIT",
  "dependencies": {
    "@neondatabase/serverless": "^1.0.1",
    "@paypal/paypal-server-sdk": "^1.1.0",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.13",
    "@types/node-geocoder": "^4.2.6",
    "@types/socket.io": "^3.0.2",
    "aws-sdk": "^2.1489.0",
    "axios": "^1.6.2",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^2.4.3",
    "bull": "^4.12.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "colors": "^1.4.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "date-fns": "^4.1.0",
    "dotenv": "^16.6.1",
    "express": "^4.18.2",
    "express-rate-limit": "^7.5.1",
    "express-validator": "^7.2.1",
    "helmet": "^7.2.0",
    "ioredis": "^5.3.2",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "knex": "^3.0.1",
    "lucide-react": "^0.541.0",
    "moment": "^2.29.4",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "node-cache": "^5.1.2",
    "node-fetch": "^3.3.2",
    "node-geocoder": "^4.4.1",
    "nodemailer": "^6.9.7",
    "paypal-rest-sdk": "^1.8.1",
    "pg": "^8.11.3",
    "prom-client": "^15.1.3",
    "react-hot-toast": "^2.6.0",
    "redis": "^4.6.10",
    "sharp": "^0.32.6",
    "socket.io": "^4.8.1",
    "sonner": "^2.0.7",
    "sqlite3": "^5.1.7",
    "tailwind-merge": "^3.3.1",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "xss": "^1.0.15",
    "zod": "^4.1.5",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@faker-js/faker": "^9.9.0",
    "@playwright/test": "^1.55.0",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/bcrypt": "^6.0.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/morgan": "^1.9.9",
    "@types/multer": "^1.4.13",
    "@types/node": "^20.19.9",
    "@types/nodemailer": "^6.4.14",
    "@types/pg": "^8.10.7",
    "@types/react": "^19.1.11",
    "@types/react-dom": "^19.1.7",
    "@types/supertest": "^2.0.16",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "autocannon": "^8.0.0",
    "chai": "^5.2.1",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "husky": "^9.0.11",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^30.0.5",
    "jest-html-reporters": "^3.1.7",
    "jest-junit": "^16.0.0",
    "lint-staged": "^15.2.7",
    "mocha": "^11.7.1",
    "nodemon": "^3.0.1",
    "playwright": "^1.55.0",
    "prettier": "^3.1.0",
    "puppeteer": "^24.18.0",
    "sinon": "^21.0.0",
    "snyk": "^1.1293.1",
    "supertest": "^6.3.4",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.3.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test:unit"
    }
  },
  "lint-staged": {
    "src/**/*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "src/**/*.{js,jsx,json,css,md}": [
      "prettier --write"
    ]
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node"
  }
}
