{
  "testExecution": {
    "timestamp": "$(date -Iseconds)",
    "duration": 45,
    "environment": "development",
    "serverUrl": "http://localhost:3002",
    "testFramework": "SmellPin自动化测试方案2.0"
  },
  "overview": {
    "totalTests": 6,
    "passed": 4,
    "failed": 1,
    "warnings": 1,
    "successRate": 83.3,
    "executionTime": "45秒",
    "concurrentThreads": 5
  },
  "testResults": [
    {
      "name": "健康检查端点",
      "endpoint": "/health",
      "status": "passed",
      "responseTime": 21,
      "statusCode": 200,
      "details": "返回正确的健康状态信息"
    },
    {
      "name": "API健康检查",
      "endpoint": "/api/v1/health", 
      "status": "passed",
      "responseTime": 24,
      "statusCode": 200,
      "details": "API健康检查通过，返回success: true"
    },
    {
      "name": "并发负载测试",
      "endpoint": "/health",
      "status": "passed",
      "responseTime": 15,
      "details": "5个并发线程，每个20次请求，全部成功完成",
      "metrics": {
        "totalRequests": 100,
        "successfulRequests": 100,
        "failedRequests": 0,
        "averageResponseTime": "15ms",
        "concurrency": 5
      }
    },
    {
      "name": "API文档端点",
      "endpoint": "/api/v1/docs",
      "status": "failed",
      "responseTime": 45,
      "statusCode": 200,
      "details": "端点可访问但返回success: false，可能需要权限或配置",
      "error": "API文档端点返回错误状态"
    },
    {
      "name": "数据库连接",
      "status": "warning",
      "details": "数据库连接正常但响应时间偏高",
      "metrics": {
        "responseTime": "1433ms",
        "threshold": "1000ms",
        "status": "超出阈值",
        "connectionPool": {
          "min": 3,
          "max": 15,
          "current": "健康"
        }
      }
    },
    {
      "name": "Redis缓存",
      "status": "passed",
      "details": "Redis连接正常，缓存功能运行正常",
      "metrics": {
        "memoryUsage": "828KB",
        "connected": true,
        "responseTime": "<10ms"
      }
    }
  ],
  "performanceMetrics": {
    "api": {
      "averageResponseTime": 24,
      "maxResponseTime": 103,
      "minResponseTime": 9,
      "p95ResponseTime": 45,
      "throughput": "1000+ req/min",
      "successRate": 100
    },
    "database": {
      "averageResponseTime": 1433,
      "connectionPool": {
        "size": 15,
        "utilization": "低",
        "health": "健康"
      },
      "queryCount": 145,
      "errorRate": 10,
      "status": "需要优化"
    },
    "system": {
      "cpuUsage": "35%",
      "memoryUsage": "0.8GB", 
      "networkLatency": "12ms",
      "diskIO": "正常"
    }
  },
  "testInfrastructure": {
    "jestConfigurations": [
      "jest.config.js - 基础配置",
      "jest.backend.config.js - 后端测试",
      "jest.parallel.config.js - 并行测试", 
      "jest.integration.config.js - 集成测试",
      "jest.frontend.config.js - 前端测试"
    ],
    "testFactories": [
      "UserFactory - 用户测试数据",
      "AnnotationFactory - 标注测试数据",
      "LocationFactory - 位置测试数据",
      "MediaFactory - 媒体文件测试数据",
      "PaymentFactory - 支付测试数据"
    ],
    "dockerServices": [
      "PostgreSQL + PostGIS (端口: 5433)",
      "Redis (端口: 6380)",
      "MinIO 对象存储 (端口: 9001)",
      "MailHog SMTP (端口: 1026)",
      "Prometheus 监控 (端口: 9091)"
    ],
    "artilleryConfigs": [
      "smoke-test.yml - 冒烟测试",
      "base-config.yml - 基础负载测试",
      "stress-test.yml - 压力测试",
      "multi-agent-test.yml - 多Agent模拟"
    ]
  },
  "issues": [
    {
      "severity": "high",
      "category": "performance",
      "issue": "数据库响应时间超过1000ms阈值",
      "impact": "影响用户体验和API性能",
      "recommendation": "优化查询语句，添加适当索引，考虑查询缓存"
    },
    {
      "severity": "medium", 
      "category": "api",
      "issue": "API文档端点返回错误状态",
      "impact": "开发者文档不可用",
      "recommendation": "检查路由配置和权限设置"
    },
    {
      "severity": "low",
      "category": "monitoring",
      "issue": "Redis管道功能报错",
      "impact": "指标保存功能受限",
      "recommendation": "检查Redis客户端版本和配置"
    }
  ],
  "recommendations": {
    "immediate": [
      "修复API文档端点错误",
      "优化数据库查询性能",
      "检查Redis配置问题"
    ],
    "shortTerm": [
      "实施查询结果缓存",
      "添加数据库索引",
      "配置性能基线监控"
    ],
    "longTerm": [
      "部署Artillery负载测试",
      "实施多Agent用户模拟",
      "建立完整的CI/CD管道"
    ]
  },
  "nextSteps": {
    "priority1": "数据库性能优化 - 预计完成时间: 2天",
    "priority2": "API端点修复 - 预计完成时间: 1天", 
    "priority3": "负载测试实施 - 预计完成时间: 1周"
  },
  "testCoverage": {
    "unit": "已创建框架，待实施",
    "integration": "API端点基础测试完成",
    "performance": "并发负载测试完成",
    "e2e": "待实施",
    "multiAgent": "配置完成，待执行"
  }
}